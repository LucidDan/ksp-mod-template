name: KSP Mod Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  NUGET_AUTH_TOKEN: ${{secrets.GPR_TOKEN}}

jobs:
  build-plugin:
    name: Build .NET project
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v1.0.0
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
      with:
        nuget-version: latest
        #nuget-api-key: ${{ secrets.NUGET_API_KEY }}
    - name: add GPR as a package sources
      run: nuget source Add -Name "GPR" -Source ${{ secrets.GPR_URI }} -UserName ${{ secrets.GPR_USERNAME }} -Password ${{ secrets.GPR_TOKEN }}
    - name: msbuild
      run: msbuild -restore:True -p:Configuration=Release
    - uses: actions/upload-artifact@v1
      with:
        name: UnityDLL
        path: unity/Assets/Runtime/
    - uses: actions/upload-artifact@v1
      with:
        name: PluginFiles
        path: GameData

  # Seems like we need to run this inside the same workflow, otherwise the
  # unity machine ID returned is a different one.
  # what we can do is make it only run if UNITY_LICENSE is not set/empty
  unity-license-acquire:
    name: Request manual activation file
    runs-on: ubuntu-latest
    if: contains(env.UNITY_LICENSE, 'SignatureValue') == false
    steps:
      - name: Request manual activation file
        id: getManualLicenseFile
        uses: webbertakken/unity-request-manual-activation-file@v1.1
        with:
          unityVersion: 2019.2.2f1
      - name: Expose as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  build-unitybundle:
    name: Build Unity Asset Bundles
    runs-on: ubuntu-latest
    needs: build-plugin
    if: contains(env.UNITY_LICENSE, 'SignatureValue')
    steps:
    # Checkout
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true
    # Cache
    - uses: actions/cache@v1.1.0
      with:
        path: unity/Library
        key: Library-Unity-KSP
    # Activate
    - name: Activate license
      uses: webbertakken/unity-activate@v1.2
      with:
        unityVersion: 2019.2.2f1
    # Get Assembly DLLs
    - name: Download UnityDLL from dotnet build
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: UnityDLL
        # Destination path
        path: unity/Assets/Runtime/
    - name: Download Plugin Files
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: PluginFiles
        # Destination path
        path: GameData
    # Build
    - name: Build project
      uses: webbertakken/unity-builder@v1.0
      with:
        projectPath: unity
        unityVersion: 2019.2.2f1
        targetPlatform: StandaloneWindows
        buildMethod: AssetBundleBuilder.RunAssetBuild
        #customParameters: -accept-apiupdate
    # Output 
    - uses: actions/upload-artifact@v1
      with:
        name: AssetBundle
        path: GameData
# TODO: Add make-release and so forth
